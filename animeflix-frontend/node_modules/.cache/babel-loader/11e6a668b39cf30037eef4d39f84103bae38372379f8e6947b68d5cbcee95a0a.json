{"ast":null,"code":"var _jsxFileName = \"/home/javanstorm/AnimeFlix/animeflix-frontend/src/components/Genres.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport EpisodeModal from './EpisodeModal';\nimport './Genres.css';\n\n// Comprehensive anime genre system\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ANIME_GENRES = {\n  \"Main Genres\": [\"Action\", \"Adventure\", \"Comedy\", \"Drama\", \"Fantasy\", \"Horror\", \"Mystery\", \"Romance\", \"Sci-Fi\", \"Slice of Life\", \"Thriller\", \"Supernatural\"],\n  \"Demographic\": [\"Shounen\", \"Shoujo\", \"Seinen\", \"Josei\", \"Kodomomuke\"],\n  \"Setting & Time\": [\"Historical\", \"Modern\", \"Future\", \"Post-Apocalyptic\", \"Medieval\", \"School\", \"Workplace\", \"Military\", \"Space\", \"Cyberpunk\", \"Steampunk\"],\n  \"Themes\": [\"Mecha\", \"Magic\", \"Martial Arts\", \"Sports\", \"Music\", \"Cooking\", \"Gaming\", \"Idol\", \"Otaku Culture\", \"Parody\", \"Ecchi\", \"Harem\", \"Reverse Harem\"],\n  \"Mood & Style\": [\"Dark\", \"Psychological\", \"Philosophical\", \"Emotional\", \"Lighthearted\", \"Mature\", \"Gore\", \"Violence\", \"Mind Games\", \"Tragedy\", \"Wholesome\"],\n  \"Story Structure\": [\"Tournament\", \"Battle Royale\", \"Quest\", \"Coming of Age\", \"Revenge\", \"Survival\", \"Time Travel\", \"Parallel Worlds\", \"Isekai\", \"Reincarnation\"],\n  \"Art & Animation\": [\"CGI\", \"Traditional 2D\", \"Mixed Media\", \"Experimental\", \"High Budget\", \"Indie\", \"Classic Animation\"]\n};\nconst Genres = () => {\n  _s();\n  const [allContent, setAllContent] = useState([]);\n  const [filteredContent, setFilteredContent] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [availableGenres, setAvailableGenres] = useState([]);\n  const [selectedContent, setSelectedContent] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [searchMode, setSearchMode] = useState('comprehensive'); // 'content' or 'comprehensive'\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:3051'}/api/videos`).then(response => response.json()).then(data => {\n      // Extract all content from all categories\n      const allItems = [];\n      const genreSet = new Set();\n\n      // Add featured content\n      if (data.featured) {\n        allItems.push(data.featured);\n        if (data.featured.genres) {\n          data.featured.genres.forEach(genre => genreSet.add(genre));\n        }\n      }\n\n      // Add content from all categories\n      if (data.categories) {\n        Object.values(data.categories).forEach(categoryItems => {\n          if (Array.isArray(categoryItems)) {\n            categoryItems.forEach(item => {\n              if (!allItems.some(existing => existing.id === item.id)) {\n                allItems.push(item);\n                if (item.genres) {\n                  item.genres.forEach(genre => genreSet.add(genre));\n                }\n              }\n            });\n          }\n        });\n      }\n      setAllContent(allItems);\n      setFilteredContent(allItems);\n\n      // Set available genres based on search mode\n      if (searchMode === 'comprehensive') {\n        // Use comprehensive anime genre list\n        const allGenres = Object.values(ANIME_GENRES).flat();\n        setAvailableGenres(allGenres.sort());\n      } else {\n        // Use only genres from content\n        setAvailableGenres(Array.from(genreSet).sort());\n      }\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching content:', error);\n      setLoading(false);\n    });\n  }, []);\n\n  // Smart genre matching function\n  const matchesGenre = (itemGenres, selectedGenre) => {\n    if (!itemGenres || itemGenres.length === 0) return false;\n\n    // Direct match\n    if (itemGenres.includes(selectedGenre)) return true;\n\n    // Smart matching for comprehensive genres\n    const itemGenresLower = itemGenres.map(g => g.toLowerCase());\n    const selectedLower = selectedGenre.toLowerCase();\n\n    // Genre mapping for better matching\n    const genreMapping = {\n      'shounen': ['action', 'adventure', 'battle', 'fighting'],\n      'shoujo': ['romance', 'school', 'drama'],\n      'seinen': ['mature', 'psychological', 'adult'],\n      'josei': ['romance', 'drama', 'mature'],\n      'isekai': ['fantasy', 'adventure', 'magic'],\n      'mecha': ['robot', 'sci-fi', 'action'],\n      'slice of life': ['daily', 'life', 'school', 'comedy'],\n      'ecchi': ['comedy', 'romance', 'harem'],\n      'psychological': ['thriller', 'mind', 'dark'],\n      'coming of age': ['school', 'drama', 'youth'],\n      'supernatural': ['fantasy', 'horror', 'mystery'],\n      'cyberpunk': ['sci-fi', 'future', 'technology'],\n      'steampunk': ['fantasy', 'historical', 'adventure']\n    };\n\n    // Check if any item genre matches selected genre or its mappings\n    for (const itemGenre of itemGenresLower) {\n      if (itemGenre.includes(selectedLower) || selectedLower.includes(itemGenre)) {\n        return true;\n      }\n\n      // Check mappings\n      const mappings = genreMapping[selectedLower] || [];\n      if (mappings.some(mapping => itemGenre.includes(mapping))) {\n        return true;\n      }\n\n      // Reverse check\n      const itemMappings = genreMapping[itemGenre] || [];\n      if (itemMappings.some(mapping => selectedLower.includes(mapping))) {\n        return true;\n      }\n    }\n    return false;\n  };\n  useEffect(() => {\n    if (selectedGenres.length === 0) {\n      setFilteredContent(allContent);\n    } else {\n      const filtered = allContent.filter(item => {\n        const itemGenres = item.genres || [];\n        if (searchMode === 'comprehensive') {\n          // Use smart matching for comprehensive mode\n          return selectedGenres.every(genre => matchesGenre(itemGenres, genre));\n        } else {\n          // Use exact matching for content mode\n          return selectedGenres.every(genre => itemGenres.includes(genre));\n        }\n      });\n      setFilteredContent(filtered);\n    }\n  }, [selectedGenres, allContent, searchMode]);\n  const toggleGenre = genre => {\n    setSelectedGenres(prev => {\n      if (prev.includes(genre)) {\n        return prev.filter(g => g !== genre);\n      } else {\n        return [...prev, genre];\n      }\n    });\n  };\n  const clearAllGenres = () => {\n    setSelectedGenres([]);\n  };\n  const handleContentClick = item => {\n    setSelectedContent(item);\n    setShowModal(true);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-screen\",\n      children: \"Loading genres...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"genres-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genres-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Browse by Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select one or more genres to filter content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-mode-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `mode-btn ${searchMode === 'comprehensive' ? 'active' : ''}`,\n        onClick: () => setSearchMode('comprehensive'),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-list-ul\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), \"Comprehensive Genres\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `mode-btn ${searchMode === 'content' ? 'active' : ''}`,\n        onClick: () => setSearchMode('content'),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), \"Available in Library\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genre-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Genres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), selectedGenres.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-filters-btn\",\n          onClick: clearAllGenres,\n          children: [\"Clear All (\", selectedGenres.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), searchMode === 'comprehensive' ?\n      /*#__PURE__*/\n      // Categorized genre display\n      _jsxDEV(\"div\", {\n        className: \"genre-categories\",\n        children: Object.entries(ANIME_GENRES).map(([category, genres]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"genre-category\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"category-title\",\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genre-tags\",\n            children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `genre-filter-tag ${selectedGenres.includes(genre) ? 'selected' : ''}`,\n              onClick: () => toggleGenre(genre),\n              children: [genre, selectedGenres.includes(genre) && /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-check\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 58\n              }, this)]\n            }, genre, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this)]\n        }, category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // Simple genre display\n      _jsxDEV(\"div\", {\n        className: \"genre-tags\",\n        children: availableGenres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `genre-filter-tag ${selectedGenres.includes(genre) ? 'selected' : ''}`,\n          onClick: () => toggleGenre(genre),\n          children: [genre, selectedGenres.includes(genre) && /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 52\n          }, this)]\n        }, genre, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genre-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedGenres.length === 0 ? `All Content (${filteredContent.length} items)` : `Results for ${selectedGenres.join(' + ')} (${filteredContent.length} items)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), filteredContent.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No content found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Try selecting different genres or clearing your filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-grid\",\n        children: filteredContent.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-card\",\n          onClick: () => handleContentClick(item),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-image\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.thumbnail,\n              alt: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-overlay\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"play-button\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-play\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-info-overlay\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-meta\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: item.year\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: item.type === 'movie' || item.episodes === 1 ? item.rating : `${item.episodes} episodes`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-genres\",\n                  children: (item.genres || []).slice(0, 3).map(genre => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"mini-genre-tag\",\n                    children: genre\n                  }, genre, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EpisodeModal, {\n      isOpen: showModal,\n      onClose: () => setShowModal(false),\n      content: selectedContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n_s(Genres, \"BR9hj2X4znlIngh4to45wnyT/ms=\");\n_c = Genres;\nexport default Genres;\nvar _c;\n$RefreshReg$(_c, \"Genres\");","map":{"version":3,"names":["React","useState","useEffect","EpisodeModal","jsxDEV","_jsxDEV","ANIME_GENRES","Genres","_s","allContent","setAllContent","filteredContent","setFilteredContent","selectedGenres","setSelectedGenres","availableGenres","setAvailableGenres","selectedContent","setSelectedContent","showModal","setShowModal","loading","setLoading","searchMode","setSearchMode","fetch","process","env","REACT_APP_API_URL","then","response","json","data","allItems","genreSet","Set","featured","push","genres","forEach","genre","add","categories","Object","values","categoryItems","Array","isArray","item","some","existing","id","allGenres","flat","sort","from","catch","error","console","matchesGenre","itemGenres","selectedGenre","length","includes","itemGenresLower","map","g","toLowerCase","selectedLower","genreMapping","itemGenre","mappings","mapping","itemMappings","filtered","filter","every","toggleGenre","prev","clearAllGenres","handleContentClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","entries","category","join","src","thumbnail","alt","title","year","type","episodes","rating","slice","isOpen","onClose","content","_c","$RefreshReg$"],"sources":["/home/javanstorm/AnimeFlix/animeflix-frontend/src/components/Genres.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport EpisodeModal from './EpisodeModal';\r\nimport './Genres.css';\r\n\r\n// Comprehensive anime genre system\r\nconst ANIME_GENRES = {\r\n  \"Main Genres\": [\r\n    \"Action\", \"Adventure\", \"Comedy\", \"Drama\", \"Fantasy\", \"Horror\", \"Mystery\", \r\n    \"Romance\", \"Sci-Fi\", \"Slice of Life\", \"Thriller\", \"Supernatural\"\r\n  ],\r\n  \"Demographic\": [\r\n    \"Shounen\", \"Shoujo\", \"Seinen\", \"Josei\", \"Kodomomuke\"\r\n  ],\r\n  \"Setting & Time\": [\r\n    \"Historical\", \"Modern\", \"Future\", \"Post-Apocalyptic\", \"Medieval\", \r\n    \"School\", \"Workplace\", \"Military\", \"Space\", \"Cyberpunk\", \"Steampunk\"\r\n  ],\r\n  \"Themes\": [\r\n    \"Mecha\", \"Magic\", \"Martial Arts\", \"Sports\", \"Music\", \"Cooking\", \r\n    \"Gaming\", \"Idol\", \"Otaku Culture\", \"Parody\", \"Ecchi\", \"Harem\", \"Reverse Harem\"\r\n  ],\r\n  \"Mood & Style\": [\r\n    \"Dark\", \"Psychological\", \"Philosophical\", \"Emotional\", \"Lighthearted\", \r\n    \"Mature\", \"Gore\", \"Violence\", \"Mind Games\", \"Tragedy\", \"Wholesome\"\r\n  ],\r\n  \"Story Structure\": [\r\n    \"Tournament\", \"Battle Royale\", \"Quest\", \"Coming of Age\", \"Revenge\", \r\n    \"Survival\", \"Time Travel\", \"Parallel Worlds\", \"Isekai\", \"Reincarnation\"\r\n  ],\r\n  \"Art & Animation\": [\r\n    \"CGI\", \"Traditional 2D\", \"Mixed Media\", \"Experimental\", \"High Budget\", \r\n    \"Indie\", \"Classic Animation\"\r\n  ]\r\n};\r\n\r\nconst Genres = () => {\r\n  const [allContent, setAllContent] = useState([]);\r\n  const [filteredContent, setFilteredContent] = useState([]);\r\n  const [selectedGenres, setSelectedGenres] = useState([]);\r\n  const [availableGenres, setAvailableGenres] = useState([]);\r\n  const [selectedContent, setSelectedContent] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchMode, setSearchMode] = useState('comprehensive'); // 'content' or 'comprehensive'\r\n\r\n  useEffect(() => {\r\n    fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:3051'}/api/videos`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // Extract all content from all categories\r\n        const allItems = [];\r\n        const genreSet = new Set();\r\n        \r\n        // Add featured content\r\n        if (data.featured) {\r\n          allItems.push(data.featured);\r\n          if (data.featured.genres) {\r\n            data.featured.genres.forEach(genre => genreSet.add(genre));\r\n          }\r\n        }\r\n        \r\n        // Add content from all categories\r\n        if (data.categories) {\r\n          Object.values(data.categories).forEach(categoryItems => {\r\n            if (Array.isArray(categoryItems)) {\r\n              categoryItems.forEach(item => {\r\n                if (!allItems.some(existing => existing.id === item.id)) {\r\n                  allItems.push(item);\r\n                  if (item.genres) {\r\n                    item.genres.forEach(genre => genreSet.add(genre));\r\n                  }\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n        \r\n        setAllContent(allItems);\r\n        setFilteredContent(allItems);\r\n        \r\n        // Set available genres based on search mode\r\n        if (searchMode === 'comprehensive') {\r\n          // Use comprehensive anime genre list\r\n          const allGenres = Object.values(ANIME_GENRES).flat();\r\n          setAvailableGenres(allGenres.sort());\r\n        } else {\r\n          // Use only genres from content\r\n          setAvailableGenres(Array.from(genreSet).sort());\r\n        }\r\n        \r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching content:', error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  // Smart genre matching function\r\n  const matchesGenre = (itemGenres, selectedGenre) => {\r\n    if (!itemGenres || itemGenres.length === 0) return false;\r\n    \r\n    // Direct match\r\n    if (itemGenres.includes(selectedGenre)) return true;\r\n    \r\n    // Smart matching for comprehensive genres\r\n    const itemGenresLower = itemGenres.map(g => g.toLowerCase());\r\n    const selectedLower = selectedGenre.toLowerCase();\r\n    \r\n    // Genre mapping for better matching\r\n    const genreMapping = {\r\n      'shounen': ['action', 'adventure', 'battle', 'fighting'],\r\n      'shoujo': ['romance', 'school', 'drama'],\r\n      'seinen': ['mature', 'psychological', 'adult'],\r\n      'josei': ['romance', 'drama', 'mature'],\r\n      'isekai': ['fantasy', 'adventure', 'magic'],\r\n      'mecha': ['robot', 'sci-fi', 'action'],\r\n      'slice of life': ['daily', 'life', 'school', 'comedy'],\r\n      'ecchi': ['comedy', 'romance', 'harem'],\r\n      'psychological': ['thriller', 'mind', 'dark'],\r\n      'coming of age': ['school', 'drama', 'youth'],\r\n      'supernatural': ['fantasy', 'horror', 'mystery'],\r\n      'cyberpunk': ['sci-fi', 'future', 'technology'],\r\n      'steampunk': ['fantasy', 'historical', 'adventure']\r\n    };\r\n    \r\n    // Check if any item genre matches selected genre or its mappings\r\n    for (const itemGenre of itemGenresLower) {\r\n      if (itemGenre.includes(selectedLower) || selectedLower.includes(itemGenre)) {\r\n        return true;\r\n      }\r\n      \r\n      // Check mappings\r\n      const mappings = genreMapping[selectedLower] || [];\r\n      if (mappings.some(mapping => itemGenre.includes(mapping))) {\r\n        return true;\r\n      }\r\n      \r\n      // Reverse check\r\n      const itemMappings = genreMapping[itemGenre] || [];\r\n      if (itemMappings.some(mapping => selectedLower.includes(mapping))) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedGenres.length === 0) {\r\n      setFilteredContent(allContent);\r\n    } else {\r\n      const filtered = allContent.filter(item => {\r\n        const itemGenres = item.genres || [];\r\n        \r\n        if (searchMode === 'comprehensive') {\r\n          // Use smart matching for comprehensive mode\r\n          return selectedGenres.every(genre => matchesGenre(itemGenres, genre));\r\n        } else {\r\n          // Use exact matching for content mode\r\n          return selectedGenres.every(genre => itemGenres.includes(genre));\r\n        }\r\n      });\r\n      setFilteredContent(filtered);\r\n    }\r\n  }, [selectedGenres, allContent, searchMode]);\r\n\r\n  const toggleGenre = (genre) => {\r\n    setSelectedGenres(prev => {\r\n      if (prev.includes(genre)) {\r\n        return prev.filter(g => g !== genre);\r\n      } else {\r\n        return [...prev, genre];\r\n      }\r\n    });\r\n  };\r\n\r\n  const clearAllGenres = () => {\r\n    setSelectedGenres([]);\r\n  };\r\n\r\n  const handleContentClick = (item) => {\r\n    setSelectedContent(item);\r\n    setShowModal(true);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading-screen\">Loading genres...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"genres-container\">\r\n      <div className=\"genres-header\">\r\n        <h1>Browse by Genres</h1>\r\n        <p>Select one or more genres to filter content</p>\r\n      </div>\r\n\r\n      {/* Search Mode Toggle */}\r\n      <div className=\"search-mode-toggle\">\r\n        <button \r\n          className={`mode-btn ${searchMode === 'comprehensive' ? 'active' : ''}`}\r\n          onClick={() => setSearchMode('comprehensive')}\r\n        >\r\n          <i className=\"fas fa-list-ul\"></i>\r\n          Comprehensive Genres\r\n        </button>\r\n        <button \r\n          className={`mode-btn ${searchMode === 'content' ? 'active' : ''}`}\r\n          onClick={() => setSearchMode('content')}\r\n        >\r\n          <i className=\"fas fa-filter\"></i>\r\n          Available in Library\r\n        </button>\r\n      </div>\r\n\r\n      {/* Genre Filter Section */}\r\n      <div className=\"genre-filters\">\r\n        <div className=\"filter-header\">\r\n          <h2>Select Genres</h2>\r\n          {selectedGenres.length > 0 && (\r\n            <button className=\"clear-filters-btn\" onClick={clearAllGenres}>\r\n              Clear All ({selectedGenres.length})\r\n            </button>\r\n          )}\r\n        </div>\r\n        \r\n        {searchMode === 'comprehensive' ? (\r\n          // Categorized genre display\r\n          <div className=\"genre-categories\">\r\n            {Object.entries(ANIME_GENRES).map(([category, genres]) => (\r\n              <div key={category} className=\"genre-category\">\r\n                <h3 className=\"category-title\">{category}</h3>\r\n                <div className=\"genre-tags\">\r\n                  {genres.map(genre => (\r\n                    <button\r\n                      key={genre}\r\n                      className={`genre-filter-tag ${selectedGenres.includes(genre) ? 'selected' : ''}`}\r\n                      onClick={() => toggleGenre(genre)}\r\n                    >\r\n                      {genre}\r\n                      {selectedGenres.includes(genre) && <i className=\"fas fa-check\"></i>}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          // Simple genre display\r\n          <div className=\"genre-tags\">\r\n            {availableGenres.map(genre => (\r\n              <button\r\n                key={genre}\r\n                className={`genre-filter-tag ${selectedGenres.includes(genre) ? 'selected' : ''}`}\r\n                onClick={() => toggleGenre(genre)}\r\n              >\r\n                {genre}\r\n                {selectedGenres.includes(genre) && <i className=\"fas fa-check\"></i>}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Results Section */}\r\n      <div className=\"genre-results\">\r\n        <div className=\"results-header\">\r\n          <h2>\r\n            {selectedGenres.length === 0 \r\n              ? `All Content (${filteredContent.length} items)`\r\n              : `Results for ${selectedGenres.join(' + ')} (${filteredContent.length} items)`\r\n            }\r\n          </h2>\r\n        </div>\r\n\r\n        {filteredContent.length === 0 ? (\r\n          <div className=\"no-results\">\r\n            <i className=\"fas fa-search\"></i>\r\n            <h3>No content found</h3>\r\n            <p>Try selecting different genres or clearing your filters</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"content-grid\">\r\n            {filteredContent.map(item => (\r\n              <div \r\n                key={item.id} \r\n                className=\"content-card\"\r\n                onClick={() => handleContentClick(item)}\r\n              >\r\n                <div className=\"card-image\">\r\n                  <img src={item.thumbnail} alt={item.title} />\r\n                  <div className=\"card-overlay\">\r\n                    <div className=\"play-button\">\r\n                      <i className=\"fas fa-play\"></i>\r\n                    </div>\r\n                    <div className=\"card-info-overlay\">\r\n                      <h3>{item.title}</h3>\r\n                      <div className=\"card-meta\">\r\n                        <span>{item.year}</span>\r\n                        <span>{item.type === 'movie' || item.episodes === 1 ? item.rating : `${item.episodes} episodes`}</span>\r\n                      </div>\r\n                      <div className=\"card-genres\">\r\n                        {(item.genres || []).slice(0, 3).map(genre => (\r\n                          <span key={genre} className=\"mini-genre-tag\">{genre}</span>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <EpisodeModal \r\n        isOpen={showModal}\r\n        onClose={() => setShowModal(false)}\r\n        content={selectedContent}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Genres;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}