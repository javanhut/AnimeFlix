{"ast":null,"code":"var _jsxFileName = \"/home/javanstorm/AnimeFlix/animeflix-frontend/src/components/ShowDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './ShowDetails.css';\nimport { getContentById, contentDatabase } from '../data/contentDatabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [showData, setShowData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [selectedSeason, setSelectedSeason] = useState(1);\n  const [isInList, setIsInList] = useState(false);\n  useEffect(() => {\n    // Simulate API call\n    const fetchShowData = async () => {\n      setLoading(true);\n      try {\n        // Use the content database\n        setTimeout(() => {\n          const content = getContentById(id);\n          if (content) {\n            // Convert to the format expected by the component\n            const showData = {\n              ...content,\n              // Generate seasons and episodes data for series\n              seasons: content.type === 'series' ? generateSeasonsData(content) : [],\n              cast: generateCastData(content),\n              relatedShows: generateRelatedShows(content)\n            };\n            setShowData(showData);\n          } else {\n            setShowData(null);\n          }\n          setLoading(false);\n        }, 300);\n\n        // For production API, replace the above with:\n        // const response = await fetch(`${process.env.REACT_APP_API_URL}/api/shows/${id}`);\n        // const data = await response.json();\n        // setShowData(data);\n        // setLoading(false);\n      } catch (error) {\n        console.error('Error fetching show data:', error);\n        setLoading(false);\n      }\n    };\n    fetchShowData();\n  }, [id]);\n\n  // Helper function to generate seasons data\n  const generateSeasonsData = content => {\n    if (content.type !== 'series') return [];\n    const seasons = [];\n    const seasonsCount = content.seasons || 1;\n    const totalEpisodes = content.episodes || 12;\n    const episodesPerSeason = Math.ceil(totalEpisodes / seasonsCount);\n    for (let i = 1; i <= seasonsCount; i++) {\n      const episodeCount = i === seasonsCount ? totalEpisodes - episodesPerSeason * (i - 1) : episodesPerSeason;\n      seasons.push({\n        number: i,\n        title: `Season ${i}`,\n        year: content.year + (i - 1),\n        episodes: episodeCount,\n        episodeList: Array.from({\n          length: episodeCount\n        }, (_, j) => ({\n          id: `s${i}e${j + 1}`,\n          number: j + 1,\n          title: `Episode ${j + 1}`,\n          description: `Episode ${j + 1} of ${content.title}`,\n          duration: content.duration,\n          thumbnail: content.thumbnail,\n          airDate: new Date(content.year + (i - 1), Math.floor(Math.random() * 12), Math.floor(Math.random() * 28) + 1).toISOString().split('T')[0]\n        }))\n      });\n    }\n    return seasons;\n  };\n\n  // Helper function to generate cast data\n  const generateCastData = content => {\n    const castDatabase = {\n      'demon-slayer': [{\n        name: \"Tanjiro Kamado\",\n        actor: \"Natsuki Hanae\"\n      }, {\n        name: \"Nezuko Kamado\",\n        actor: \"Satomi Sato\"\n      }, {\n        name: \"Zenitsu Agatsuma\",\n        actor: \"Hiro Shimono\"\n      }, {\n        name: \"Inosuke Hashibira\",\n        actor: \"Matsuoka Yoshitsugu\"\n      }],\n      'attack-on-titan': [{\n        name: \"Eren Yeager\",\n        actor: \"Romi Park\"\n      }, {\n        name: \"Mikasa Ackerman\",\n        actor: \"Marina Inoue\"\n      }, {\n        name: \"Armin Arlert\",\n        actor: \"Inoue Marina\"\n      }],\n      'jujutsu-kaisen': [{\n        name: \"Yuji Itadori\",\n        actor: \"Junya Enoki\"\n      }, {\n        name: \"Megumi Fushiguro\",\n        actor: \"Yuma Uchida\"\n      }, {\n        name: \"Nobara Kugisaki\",\n        actor: \"Asami Seto\"\n      }, {\n        name: \"Satoru Gojo\",\n        actor: \"Yuichi Nakamura\"\n      }]\n    };\n    return castDatabase[content.id] || [];\n  };\n\n  // Helper function to generate related shows\n  const generateRelatedShows = content => {\n    try {\n      const allContent = Object.values(contentDatabase);\n\n      // Find shows with similar genres\n      return allContent.filter(item => item.id !== content.id && item.genres && content.genres && item.genres.some(genre => content.genres.includes(genre))).slice(0, 4).map(item => ({\n        id: item.id,\n        title: item.title,\n        poster: item.poster\n      }));\n    } catch (error) {\n      console.error('Error generating related shows:', error);\n      return [];\n    }\n  };\n  useEffect(() => {\n    // Check if show is in user's list\n    const myList = JSON.parse(localStorage.getItem('myList') || '[]');\n    setIsInList(myList.some(item => item.id === id));\n  }, [id]);\n  const handleListToggle = () => {\n    const myList = JSON.parse(localStorage.getItem('myList') || '[]');\n    if (isInList) {\n      const updatedList = myList.filter(item => item.id !== id);\n      localStorage.setItem('myList', JSON.stringify(updatedList));\n      setIsInList(false);\n    } else {\n      const showForList = {\n        id: showData.id,\n        title: showData.title,\n        poster: showData.poster,\n        year: showData.year,\n        genre: showData.genres\n      };\n      const updatedList = [...myList, showForList];\n      localStorage.setItem('myList', JSON.stringify(updatedList));\n      setIsInList(true);\n    }\n  };\n  const handleEpisodeClick = episode => {\n    // Create proper video data structure with language sources\n    const episodeWithSources = {\n      ...episode,\n      videoSources: {\n        sub: `https://example.com/videos/${id}/sub/${episode.id}.mp4`,\n        dub: `https://example.com/videos/${id}/dub/${episode.id}.mp4`\n      },\n      hasSubtitles: true,\n      hasDub: true,\n      defaultLanguage: 'sub'\n    };\n    navigate(`/watch/${id}/${episode.id}`, {\n      state: {\n        episode: episodeWithSources,\n        content: showData,\n        autoPlay: true\n      }\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show-details-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading show details...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this);\n  }\n  if (!showData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show-details-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Show not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"btn btn-primary\",\n        children: \"Return Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this);\n  }\n  const currentSeason = showData.seasons && showData.seasons.length > 0 ? showData.seasons.find(s => s.number === selectedSeason) || showData.seasons[0] : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"show-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show-hero\",\n      style: {\n        backgroundImage: `url(${showData.banner})`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hero-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"show-poster\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: showData.poster,\n              alt: showData.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"show-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"show-title\",\n              children: showData.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), showData.originalTitle && showData.originalTitle !== showData.title && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"original-title\",\n              children: showData.originalTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"show-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"year\",\n                children: showData.year\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"rating\",\n                children: showData.rating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"duration\",\n                children: showData.duration\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"imdb-rating\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-star\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 19\n                }, this), \" \", showData.imdbRating]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"show-genres\",\n              children: showData.genres.map(genre => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"genre-tag\",\n                children: genre\n              }, genre, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"show-description\",\n              children: showData.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"show-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-play\",\n                onClick: () => {\n                  var _showData$seasons$, _showData$seasons$$ep;\n                  if (showData.type === 'series' && showData.seasons && (_showData$seasons$ = showData.seasons[0]) !== null && _showData$seasons$ !== void 0 && (_showData$seasons$$ep = _showData$seasons$.episodeList) !== null && _showData$seasons$$ep !== void 0 && _showData$seasons$$ep[0]) {\n                    // Navigate to first episode\n                    handleEpisodeClick(showData.seasons[0].episodeList[0]);\n                  } else if (showData.type === 'movie') {\n                    // Navigate to movie\n                    const movieWithSources = {\n                      id: showData.id,\n                      title: showData.title,\n                      description: showData.description,\n                      duration: showData.duration,\n                      videoSources: {\n                        sub: `https://example.com/videos/${id}/sub/movie.mp4`,\n                        dub: `https://example.com/videos/${id}/dub/movie.mp4`\n                      },\n                      hasSubtitles: true,\n                      hasDub: showData.id !== 'spirited-away' && showData.id !== 'princess-mononoke',\n                      defaultLanguage: 'sub'\n                    };\n                    navigate(`/watch/${id}`, {\n                      state: {\n                        episode: movieWithSources,\n                        content: showData,\n                        autoPlay: true\n                      }\n                    });\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-play\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this), \"Watch Now\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `btn btn-list ${isInList ? 'in-list' : ''}`,\n                onClick: handleListToggle,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: `fas ${isInList ? 'fa-check' : 'fa-plus'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, this), isInList ? 'In List' : 'Add to List']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-trailer\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-play\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 19\n                }, this), \"Trailer\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show-content\",\n      children: [showData.type === 'series' && showData.seasons && showData.seasons.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"episodes-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Episodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), showData.seasons.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"season-selector\",\n            children: showData.seasons.map(season => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `season-btn ${selectedSeason === season.number ? 'active' : ''}`,\n              onClick: () => setSelectedSeason(season.number),\n              children: season.title\n            }, season.number, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), currentSeason && currentSeason.episodeList && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"episodes-grid\",\n          children: currentSeason.episodeList.map(episode => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"episode-card\",\n            onClick: () => handleEpisodeClick(episode),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"episode-thumbnail\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: episode.thumbnail,\n                alt: episode.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"episode-overlay\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-play\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"episode-duration\",\n                children: episode.duration\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"episode-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"episode-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"episode-number\",\n                  children: episode.number\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"episode-title\",\n                  children: episode.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"episode-description\",\n                children: episode.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 21\n            }, this)]\n          }, episode.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"details-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"About \", showData.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"long-description\",\n          children: showData.longDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: showData.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Studio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: showData.studio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Source\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: showData.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: showData.type === 'series' ? 'Seasons' : 'Runtime'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: showData.type === 'series' ? showData.seasons ? showData.seasons.length : 1 : showData.duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), showData.cast && showData.cast.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cast-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Voice Cast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cast-list\",\n            children: showData.cast.map((member, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cast-member\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"character-name\",\n                children: member.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"actor-name\",\n                children: member.actor\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), showData.relatedShows && showData.relatedShows.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"related-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"More Like This\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"related-grid\",\n          children: showData.relatedShows.map(show => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"related-card\",\n            onClick: () => navigate(`/show/${show.id}`),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: show.poster,\n              alt: show.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: show.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 19\n            }, this)]\n          }, show.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowDetails, \"vh0B3CSx1+7OOhCaCgMMTyDiY0E=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ShowDetails;\nexport default ShowDetails;\nvar _c;\n$RefreshReg$(_c, \"ShowDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","getContentById","contentDatabase","jsxDEV","_jsxDEV","ShowDetails","_s","id","navigate","showData","setShowData","loading","setLoading","selectedSeason","setSelectedSeason","isInList","setIsInList","fetchShowData","setTimeout","content","seasons","type","generateSeasonsData","cast","generateCastData","relatedShows","generateRelatedShows","error","console","seasonsCount","totalEpisodes","episodes","episodesPerSeason","Math","ceil","i","episodeCount","push","number","title","year","episodeList","Array","from","length","_","j","description","duration","thumbnail","airDate","Date","floor","random","toISOString","split","castDatabase","name","actor","allContent","Object","values","filter","item","genres","some","genre","includes","slice","map","poster","myList","JSON","parse","localStorage","getItem","handleListToggle","updatedList","setItem","stringify","showForList","handleEpisodeClick","episode","episodeWithSources","videoSources","sub","dub","hasSubtitles","hasDub","defaultLanguage","state","autoPlay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","currentSeason","find","s","style","backgroundImage","banner","src","alt","originalTitle","rating","imdbRating","_showData$seasons$","_showData$seasons$$ep","movieWithSources","season","longDescription","status","studio","source","member","index","show","_c","$RefreshReg$"],"sources":["/home/javanstorm/AnimeFlix/animeflix-frontend/src/components/ShowDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './ShowDetails.css';\r\nimport { getContentById, contentDatabase } from '../data/contentDatabase';\r\n\r\nconst ShowDetails = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [showData, setShowData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedSeason, setSelectedSeason] = useState(1);\r\n  const [isInList, setIsInList] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    // Simulate API call\r\n    const fetchShowData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // Use the content database\r\n        setTimeout(() => {\r\n          const content = getContentById(id);\r\n          if (content) {\r\n            // Convert to the format expected by the component\r\n            const showData = {\r\n              ...content,\r\n              // Generate seasons and episodes data for series\r\n              seasons: content.type === 'series' ? generateSeasonsData(content) : [],\r\n              cast: generateCastData(content),\r\n              relatedShows: generateRelatedShows(content)\r\n            };\r\n            setShowData(showData);\r\n          } else {\r\n            setShowData(null);\r\n          }\r\n          setLoading(false);\r\n        }, 300);\r\n\r\n        // For production API, replace the above with:\r\n        // const response = await fetch(`${process.env.REACT_APP_API_URL}/api/shows/${id}`);\r\n        // const data = await response.json();\r\n        // setShowData(data);\r\n        // setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching show data:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchShowData();\r\n  }, [id]);\r\n\r\n  // Helper function to generate seasons data\r\n  const generateSeasonsData = (content) => {\r\n    if (content.type !== 'series') return [];\r\n    \r\n    const seasons = [];\r\n    const seasonsCount = content.seasons || 1;\r\n    const totalEpisodes = content.episodes || 12;\r\n    const episodesPerSeason = Math.ceil(totalEpisodes / seasonsCount);\r\n    \r\n    for (let i = 1; i <= seasonsCount; i++) {\r\n      const episodeCount = i === seasonsCount ? \r\n        totalEpisodes - (episodesPerSeason * (i - 1)) : \r\n        episodesPerSeason;\r\n      \r\n      seasons.push({\r\n        number: i,\r\n        title: `Season ${i}`,\r\n        year: content.year + (i - 1),\r\n        episodes: episodeCount,\r\n        episodeList: Array.from({length: episodeCount}, (_, j) => ({\r\n          id: `s${i}e${j+1}`,\r\n          number: j + 1,\r\n          title: `Episode ${j + 1}`,\r\n          description: `Episode ${j + 1} of ${content.title}`,\r\n          duration: content.duration,\r\n          thumbnail: content.thumbnail,\r\n          airDate: new Date(content.year + (i - 1), Math.floor(Math.random() * 12), Math.floor(Math.random() * 28) + 1).toISOString().split('T')[0]\r\n        }))\r\n      });\r\n    }\r\n    \r\n    return seasons;\r\n  };\r\n\r\n  // Helper function to generate cast data\r\n  const generateCastData = (content) => {\r\n    const castDatabase = {\r\n      'demon-slayer': [\r\n        { name: \"Tanjiro Kamado\", actor: \"Natsuki Hanae\" },\r\n        { name: \"Nezuko Kamado\", actor: \"Satomi Sato\" },\r\n        { name: \"Zenitsu Agatsuma\", actor: \"Hiro Shimono\" },\r\n        { name: \"Inosuke Hashibira\", actor: \"Matsuoka Yoshitsugu\" }\r\n      ],\r\n      'attack-on-titan': [\r\n        { name: \"Eren Yeager\", actor: \"Romi Park\" },\r\n        { name: \"Mikasa Ackerman\", actor: \"Marina Inoue\" },\r\n        { name: \"Armin Arlert\", actor: \"Inoue Marina\" }\r\n      ],\r\n      'jujutsu-kaisen': [\r\n        { name: \"Yuji Itadori\", actor: \"Junya Enoki\" },\r\n        { name: \"Megumi Fushiguro\", actor: \"Yuma Uchida\" },\r\n        { name: \"Nobara Kugisaki\", actor: \"Asami Seto\" },\r\n        { name: \"Satoru Gojo\", actor: \"Yuichi Nakamura\" }\r\n      ]\r\n    };\r\n    \r\n    return castDatabase[content.id] || [];\r\n  };\r\n\r\n  // Helper function to generate related shows\r\n  const generateRelatedShows = (content) => {\r\n    try {\r\n      const allContent = Object.values(contentDatabase);\r\n      \r\n      // Find shows with similar genres\r\n      return allContent\r\n        .filter(item => \r\n          item.id !== content.id && \r\n          item.genres && content.genres &&\r\n          item.genres.some(genre => content.genres.includes(genre))\r\n        )\r\n        .slice(0, 4)\r\n        .map(item => ({\r\n          id: item.id,\r\n          title: item.title,\r\n          poster: item.poster\r\n        }));\r\n    } catch (error) {\r\n      console.error('Error generating related shows:', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if show is in user's list\r\n    const myList = JSON.parse(localStorage.getItem('myList') || '[]');\r\n    setIsInList(myList.some(item => item.id === id));\r\n  }, [id]);\r\n\r\n  const handleListToggle = () => {\r\n    const myList = JSON.parse(localStorage.getItem('myList') || '[]');\r\n    if (isInList) {\r\n      const updatedList = myList.filter(item => item.id !== id);\r\n      localStorage.setItem('myList', JSON.stringify(updatedList));\r\n      setIsInList(false);\r\n    } else {\r\n      const showForList = {\r\n        id: showData.id,\r\n        title: showData.title,\r\n        poster: showData.poster,\r\n        year: showData.year,\r\n        genre: showData.genres\r\n      };\r\n      const updatedList = [...myList, showForList];\r\n      localStorage.setItem('myList', JSON.stringify(updatedList));\r\n      setIsInList(true);\r\n    }\r\n  };\r\n\r\n  const handleEpisodeClick = (episode) => {\r\n    // Create proper video data structure with language sources\r\n    const episodeWithSources = {\r\n      ...episode,\r\n      videoSources: {\r\n        sub: `https://example.com/videos/${id}/sub/${episode.id}.mp4`,\r\n        dub: `https://example.com/videos/${id}/dub/${episode.id}.mp4`\r\n      },\r\n      hasSubtitles: true,\r\n      hasDub: true,\r\n      defaultLanguage: 'sub'\r\n    };\r\n\r\n    navigate(`/watch/${id}/${episode.id}`, {\r\n      state: {\r\n        episode: episodeWithSources,\r\n        content: showData,\r\n        autoPlay: true\r\n      }\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"show-details-loading\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Loading show details...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!showData) {\r\n    return (\r\n      <div className=\"show-details-error\">\r\n        <h2>Show not found</h2>\r\n        <button onClick={() => navigate('/')} className=\"btn btn-primary\">\r\n          Return Home\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const currentSeason = showData.seasons && showData.seasons.length > 0 \r\n    ? showData.seasons.find(s => s.number === selectedSeason) || showData.seasons[0]\r\n    : null;\r\n\r\n  return (\r\n    <div className=\"show-details\">\r\n      {/* Hero Banner */}\r\n      <div className=\"show-hero\" style={{backgroundImage: `url(${showData.banner})`}}>\r\n        <div className=\"hero-overlay\">\r\n          <div className=\"hero-content\">\r\n            <div className=\"show-poster\">\r\n              <img src={showData.poster} alt={showData.title} />\r\n            </div>\r\n            <div className=\"show-info\">\r\n              <h1 className=\"show-title\">{showData.title}</h1>\r\n              {showData.originalTitle && showData.originalTitle !== showData.title && (\r\n                <p className=\"original-title\">{showData.originalTitle}</p>\r\n              )}\r\n              <div className=\"show-meta\">\r\n                <span className=\"year\">{showData.year}</span>\r\n                <span className=\"rating\">{showData.rating}</span>\r\n                <span className=\"duration\">{showData.duration}</span>\r\n                <span className=\"imdb-rating\">\r\n                  <i className=\"fas fa-star\"></i> {showData.imdbRating}\r\n                </span>\r\n              </div>\r\n              <div className=\"show-genres\">\r\n                {showData.genres.map(genre => (\r\n                  <span key={genre} className=\"genre-tag\">{genre}</span>\r\n                ))}\r\n              </div>\r\n              <p className=\"show-description\">{showData.description}</p>\r\n              <div className=\"show-actions\">\r\n                <button \r\n                  className=\"btn btn-play\"\r\n                  onClick={() => {\r\n                    if (showData.type === 'series' && showData.seasons && showData.seasons[0]?.episodeList?.[0]) {\r\n                      // Navigate to first episode\r\n                      handleEpisodeClick(showData.seasons[0].episodeList[0]);\r\n                    } else if (showData.type === 'movie') {\r\n                      // Navigate to movie\r\n                      const movieWithSources = {\r\n                        id: showData.id,\r\n                        title: showData.title,\r\n                        description: showData.description,\r\n                        duration: showData.duration,\r\n                        videoSources: {\r\n                          sub: `https://example.com/videos/${id}/sub/movie.mp4`,\r\n                          dub: `https://example.com/videos/${id}/dub/movie.mp4`\r\n                        },\r\n                        hasSubtitles: true,\r\n                        hasDub: showData.id !== 'spirited-away' && showData.id !== 'princess-mononoke',\r\n                        defaultLanguage: 'sub'\r\n                      };\r\n                      \r\n                      navigate(`/watch/${id}`, {\r\n                        state: {\r\n                          episode: movieWithSources,\r\n                          content: showData,\r\n                          autoPlay: true\r\n                        }\r\n                      });\r\n                    }\r\n                  }}\r\n                >\r\n                  <i className=\"fas fa-play\"></i>\r\n                  Watch Now\r\n                </button>\r\n                <button \r\n                  className={`btn btn-list ${isInList ? 'in-list' : ''}`}\r\n                  onClick={handleListToggle}\r\n                >\r\n                  <i className={`fas ${isInList ? 'fa-check' : 'fa-plus'}`}></i>\r\n                  {isInList ? 'In List' : 'Add to List'}\r\n                </button>\r\n                <button className=\"btn btn-trailer\">\r\n                  <i className=\"fas fa-play\"></i>\r\n                  Trailer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content Sections */}\r\n      <div className=\"show-content\">\r\n        {/* Episodes Section - Only show for series with episodes */}\r\n        {showData.type === 'series' && showData.seasons && showData.seasons.length > 0 && (\r\n          <section className=\"episodes-section\">\r\n            <div className=\"section-header\">\r\n              <h2>Episodes</h2>\r\n              {showData.seasons.length > 1 && (\r\n                <div className=\"season-selector\">\r\n                  {showData.seasons.map(season => (\r\n                    <button\r\n                      key={season.number}\r\n                      className={`season-btn ${selectedSeason === season.number ? 'active' : ''}`}\r\n                      onClick={() => setSelectedSeason(season.number)}\r\n                    >\r\n                      {season.title}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {currentSeason && currentSeason.episodeList && (\r\n              <div className=\"episodes-grid\">\r\n                {currentSeason.episodeList.map(episode => (\r\n                  <div \r\n                    key={episode.id} \r\n                    className=\"episode-card\"\r\n                    onClick={() => handleEpisodeClick(episode)}\r\n                  >\r\n                    <div className=\"episode-thumbnail\">\r\n                      <img src={episode.thumbnail} alt={episode.title} />\r\n                      <div className=\"episode-overlay\">\r\n                        <i className=\"fas fa-play\"></i>\r\n                      </div>\r\n                      <span className=\"episode-duration\">{episode.duration}</span>\r\n                    </div>\r\n                    <div className=\"episode-info\">\r\n                      <div className=\"episode-header\">\r\n                        <span className=\"episode-number\">{episode.number}</span>\r\n                        <h3 className=\"episode-title\">{episode.title}</h3>\r\n                      </div>\r\n                      <p className=\"episode-description\">{episode.description}</p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </section>\r\n        )}\r\n\r\n        {/* Details Section */}\r\n        <section className=\"details-section\">\r\n          <h2>About {showData.title}</h2>\r\n          <p className=\"long-description\">{showData.longDescription}</p>\r\n          \r\n          <div className=\"details-grid\">\r\n            <div className=\"detail-item\">\r\n              <h4>Status</h4>\r\n              <p>{showData.status}</p>\r\n            </div>\r\n            <div className=\"detail-item\">\r\n              <h4>Studio</h4>\r\n              <p>{showData.studio}</p>\r\n            </div>\r\n            <div className=\"detail-item\">\r\n              <h4>Source</h4>\r\n              <p>{showData.source}</p>\r\n            </div>\r\n            <div className=\"detail-item\">\r\n              <h4>{showData.type === 'series' ? 'Seasons' : 'Runtime'}</h4>\r\n              <p>{showData.type === 'series' ? (showData.seasons ? showData.seasons.length : 1) : showData.duration}</p>\r\n            </div>\r\n          </div>\r\n\r\n          {showData.cast && showData.cast.length > 0 && (\r\n            <div className=\"cast-section\">\r\n              <h3>Voice Cast</h3>\r\n              <div className=\"cast-list\">\r\n                {showData.cast.map((member, index) => (\r\n                  <div key={index} className=\"cast-member\">\r\n                    <span className=\"character-name\">{member.name}</span>\r\n                    <span className=\"actor-name\">{member.actor}</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </section>\r\n\r\n        {/* Related Shows */}\r\n        {showData.relatedShows && showData.relatedShows.length > 0 && (\r\n          <section className=\"related-section\">\r\n            <h2>More Like This</h2>\r\n            <div className=\"related-grid\">\r\n              {showData.relatedShows.map(show => (\r\n                <div \r\n                  key={show.id} \r\n                  className=\"related-card\"\r\n                  onClick={() => navigate(`/show/${show.id}`)}\r\n                >\r\n                  <img src={show.poster} alt={show.title} />\r\n                  <h3>{show.title}</h3>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </section>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}