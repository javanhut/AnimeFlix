{"ast":null,"code":"var _jsxFileName = \"/home/javanstorm/AnimeFlix/animeflix-frontend/src/components/Watch.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams, useLocation, Link } from 'react-router-dom';\nimport Player from './Player';\nimport './Watch.css';\nimport { getWatchData } from '../data/contentDatabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Watch = () => {\n  _s();\n  const {\n    id,\n    episodeId\n  } = useParams();\n  const location = useLocation();\n  const [video, setVideo] = useState(null);\n  const [currentEpisode, setCurrentEpisode] = useState(null);\n  const [relatedVideos, setRelatedVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [autoPlay, setAutoPlay] = useState(false);\n  const playerRef = useRef(null);\n  const progressUpdateInterval = useRef(null);\n  useEffect(() => {\n    const fetchVideo = async () => {\n      try {\n        setLoading(true);\n\n        // Check if episode data was passed via navigation state\n        if (location.state && location.state.episode && location.state.content) {\n          const {\n            episode,\n            content,\n            autoPlay: shouldAutoPlay\n          } = location.state;\n          setVideo(content);\n          setCurrentEpisode(episode);\n          setAutoPlay(shouldAutoPlay || true);\n\n          // Get related videos\n          const allContentResponse = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:3051'}/api/videos`);\n          const allContent = await allContentResponse.json();\n          const related = [];\n          if (allContent.categories) {\n            for (const categoryKey in allContent.categories) {\n              const categoryVideos = allContent.categories[categoryKey].filter(v => v.id !== id).slice(0, 3);\n              related.push(...categoryVideos);\n            }\n          }\n          setRelatedVideos(related.slice(0, 6));\n        } else {\n          // Use our content database\n          const watchData = getWatchData(id, episodeId);\n          if (watchData) {\n            setVideo(watchData.content);\n            setCurrentEpisode(watchData.episode);\n\n            // Mock related videos for now\n            const mockRelated = [{\n              id: 'attack-on-titan',\n              title: 'Attack on Titan',\n              thumbnail: 'https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=300&h=170&fit=crop',\n              rating: 'TV-MA',\n              year: 2013,\n              description: 'Humanity fights for survival against giant humanoid Titans.'\n            }, {\n              id: 'jujutsu-kaisen',\n              title: 'Jujutsu Kaisen',\n              thumbnail: 'https://images.unsplash.com/photo-1621570180008-b9e7c4d2cd35?w=300&h=170&fit=crop',\n              rating: 'TV-14',\n              year: 2020,\n              description: 'A boy becomes cursed after swallowing a demon finger.'\n            }];\n            setRelatedVideos(mockRelated);\n          } else {\n            throw new Error('Content not found');\n          }\n        }\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchVideo();\n  }, [id, episodeId, location.state]);\n\n  // Track video progress\n  useEffect(() => {\n    if (video && currentEpisode) {\n      progressUpdateInterval.current = setInterval(() => {\n        const videoElement = document.querySelector('video');\n        if (videoElement && !videoElement.paused && videoElement.duration > 0) {\n          const progress = videoElement.currentTime / videoElement.duration;\n          const watchData = {\n            progress,\n            timestamp: Date.now(),\n            duration: videoElement.duration,\n            currentTime: videoElement.currentTime\n          };\n\n          // Save progress to localStorage\n          const existingProgress = localStorage.getItem(`watch_progress_${video.id}`);\n          const progressData = existingProgress ? JSON.parse(existingProgress) : {};\n          progressData[currentEpisode.id] = watchData;\n          localStorage.setItem(`watch_progress_${video.id}`, JSON.stringify(progressData));\n        }\n      }, 10000); // Update every 10 seconds\n\n      return () => {\n        if (progressUpdateInterval.current) {\n          clearInterval(progressUpdateInterval.current);\n        }\n      };\n    }\n  }, [video, currentEpisode]);\n\n  // Auto-fullscreen when autoPlay is true\n  useEffect(() => {\n    if (autoPlay && currentEpisode) {\n      // Wait for player to be ready, then trigger fullscreen\n      const checkPlayerReady = () => {\n        if (playerRef.current) {\n          playerRef.current.playAndFullscreen();\n        } else {\n          // Try again in a bit\n          setTimeout(checkPlayerReady, 100);\n        }\n      };\n\n      // Small delay to ensure player component is mounted\n      const timer = setTimeout(checkPlayerReady, 300);\n      return () => clearTimeout(timer);\n    }\n  }, [autoPlay, currentEpisode]);\n  const handleVideoEnd = () => {\n    // Try to find next episode in the same series\n    if (video && video.seasons && currentEpisode) {\n      let nextEpisode = null;\n      let foundCurrent = false;\n\n      // Search through all seasons and episodes\n      for (const seasonKey in video.seasons) {\n        const episodes = video.seasons[seasonKey];\n        for (let i = 0; i < episodes.length; i++) {\n          if (foundCurrent) {\n            nextEpisode = episodes[i];\n            break;\n          }\n          if (episodes[i].id === currentEpisode.id) {\n            foundCurrent = true;\n            // Check if there's a next episode in the same season\n            if (i + 1 < episodes.length) {\n              nextEpisode = episodes[i + 1];\n              break;\n            }\n          }\n        }\n        if (nextEpisode) break;\n      }\n      if (nextEpisode) {\n        setCurrentEpisode(nextEpisode);\n        setAutoPlay(true);\n        return;\n      }\n    }\n\n    // Fallback to related videos\n    if (relatedVideos.length > 0) {\n      const nextVideo = relatedVideos[0];\n      window.location.href = `/watch/${nextVideo.id}`;\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"watch-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading video...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"watch-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Video not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"btn btn-primary\",\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this);\n  }\n  if (!video || !currentEpisode) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"watch-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Video not available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select an episode from the series page.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"btn btn-primary\",\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"watch-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-section\",\n      children: /*#__PURE__*/_jsxDEV(Player, {\n        video: currentEpisode,\n        onVideoEnd: handleVideoEnd,\n        autoPlay: autoPlay,\n        ref: playerRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"watch-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"video-title\",\n            children: currentEpisode.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"series-title\",\n            children: video.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"rating\",\n              children: video.rating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"year\",\n              children: video.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"duration\",\n              children: currentEpisode.duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), video.episodes && video.episodes > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"episodes\",\n              children: [video.episodes, \" Episodes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-description\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentEpisode.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-genres\",\n          children: video.genre && video.genre.map(genre => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"genre-tag\",\n            children: genre\n          }, genre, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), relatedVideos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"related-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"More Like This\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"related-grid\",\n          children: relatedVideos.map(relatedVideo => /*#__PURE__*/_jsxDEV(Link, {\n            to: `/watch/${relatedVideo.id}`,\n            className: \"related-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: relatedVideo.thumbnail,\n              alt: relatedVideo.title,\n              className: \"related-thumbnail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"related-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"related-title\",\n                children: relatedVideo.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"related-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"rating\",\n                  children: relatedVideo.rating\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"year\",\n                  children: relatedVideo.year\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"related-description\",\n                children: relatedVideo.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this)]\n          }, relatedVideo.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(Watch, \"jD60Qk2EBicmXXP5rexKKcfAC30=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = Watch;\nexport default Watch;\nvar _c;\n$RefreshReg$(_c, \"Watch\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","useLocation","Link","Player","getWatchData","jsxDEV","_jsxDEV","Watch","_s","id","episodeId","location","video","setVideo","currentEpisode","setCurrentEpisode","relatedVideos","setRelatedVideos","loading","setLoading","error","setError","autoPlay","setAutoPlay","playerRef","progressUpdateInterval","fetchVideo","state","episode","content","shouldAutoPlay","allContentResponse","fetch","process","env","REACT_APP_API_URL","allContent","json","related","categories","categoryKey","categoryVideos","filter","v","slice","push","watchData","mockRelated","title","thumbnail","rating","year","description","Error","err","message","current","setInterval","videoElement","document","querySelector","paused","duration","progress","currentTime","timestamp","Date","now","existingProgress","localStorage","getItem","progressData","JSON","parse","setItem","stringify","clearInterval","checkPlayerReady","playAndFullscreen","setTimeout","timer","clearTimeout","handleVideoEnd","seasons","nextEpisode","foundCurrent","seasonKey","episodes","i","length","nextVideo","window","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onVideoEnd","ref","genre","map","relatedVideo","src","alt","_c","$RefreshReg$"],"sources":["/home/javanstorm/AnimeFlix/animeflix-frontend/src/components/Watch.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useParams, useLocation, Link } from 'react-router-dom';\nimport Player from './Player';\nimport './Watch.css';\nimport { getWatchData } from '../data/contentDatabase';\n\nconst Watch = () => {\n  const { id, episodeId } = useParams();\n  const location = useLocation();\n  const [video, setVideo] = useState(null);\n  const [currentEpisode, setCurrentEpisode] = useState(null);\n  const [relatedVideos, setRelatedVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [autoPlay, setAutoPlay] = useState(false);\n  const playerRef = useRef(null);\n  const progressUpdateInterval = useRef(null);\n\n  useEffect(() => {\n    const fetchVideo = async () => {\n      try {\n        setLoading(true);\n        \n        // Check if episode data was passed via navigation state\n        if (location.state && location.state.episode && location.state.content) {\n          const { episode, content, autoPlay: shouldAutoPlay } = location.state;\n          setVideo(content);\n          setCurrentEpisode(episode);\n          setAutoPlay(shouldAutoPlay || true);\n          \n          // Get related videos\n          const allContentResponse = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:3051'}/api/videos`);\n          const allContent = await allContentResponse.json();\n          \n          const related = [];\n          if (allContent.categories) {\n            for (const categoryKey in allContent.categories) {\n              const categoryVideos = allContent.categories[categoryKey]\n                .filter(v => v.id !== id)\n                .slice(0, 3);\n              related.push(...categoryVideos);\n            }\n          }\n          setRelatedVideos(related.slice(0, 6));\n        } else {\n          // Use our content database\n          const watchData = getWatchData(id, episodeId);\n          \n          if (watchData) {\n            setVideo(watchData.content);\n            setCurrentEpisode(watchData.episode);\n            \n            // Mock related videos for now\n            const mockRelated = [\n              {\n                id: 'attack-on-titan',\n                title: 'Attack on Titan',\n                thumbnail: 'https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=300&h=170&fit=crop',\n                rating: 'TV-MA',\n                year: 2013,\n                description: 'Humanity fights for survival against giant humanoid Titans.'\n              },\n              {\n                id: 'jujutsu-kaisen',\n                title: 'Jujutsu Kaisen',\n                thumbnail: 'https://images.unsplash.com/photo-1621570180008-b9e7c4d2cd35?w=300&h=170&fit=crop',\n                rating: 'TV-14',\n                year: 2020,\n                description: 'A boy becomes cursed after swallowing a demon finger.'\n              }\n            ];\n            setRelatedVideos(mockRelated);\n          } else {\n            throw new Error('Content not found');\n          }\n        }\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchVideo();\n  }, [id, episodeId, location.state]);\n\n  // Track video progress\n  useEffect(() => {\n    if (video && currentEpisode) {\n      progressUpdateInterval.current = setInterval(() => {\n        const videoElement = document.querySelector('video');\n        if (videoElement && !videoElement.paused && videoElement.duration > 0) {\n          const progress = videoElement.currentTime / videoElement.duration;\n          const watchData = {\n            progress,\n            timestamp: Date.now(),\n            duration: videoElement.duration,\n            currentTime: videoElement.currentTime\n          };\n          \n          // Save progress to localStorage\n          const existingProgress = localStorage.getItem(`watch_progress_${video.id}`);\n          const progressData = existingProgress ? JSON.parse(existingProgress) : {};\n          progressData[currentEpisode.id] = watchData;\n          localStorage.setItem(`watch_progress_${video.id}`, JSON.stringify(progressData));\n        }\n      }, 10000); // Update every 10 seconds\n\n      return () => {\n        if (progressUpdateInterval.current) {\n          clearInterval(progressUpdateInterval.current);\n        }\n      };\n    }\n  }, [video, currentEpisode]);\n\n  // Auto-fullscreen when autoPlay is true\n  useEffect(() => {\n    if (autoPlay && currentEpisode) {\n      // Wait for player to be ready, then trigger fullscreen\n      const checkPlayerReady = () => {\n        if (playerRef.current) {\n          playerRef.current.playAndFullscreen();\n        } else {\n          // Try again in a bit\n          setTimeout(checkPlayerReady, 100);\n        }\n      };\n      \n      // Small delay to ensure player component is mounted\n      const timer = setTimeout(checkPlayerReady, 300);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [autoPlay, currentEpisode]);\n\n  const handleVideoEnd = () => {\n    // Try to find next episode in the same series\n    if (video && video.seasons && currentEpisode) {\n      let nextEpisode = null;\n      let foundCurrent = false;\n      \n      // Search through all seasons and episodes\n      for (const seasonKey in video.seasons) {\n        const episodes = video.seasons[seasonKey];\n        for (let i = 0; i < episodes.length; i++) {\n          if (foundCurrent) {\n            nextEpisode = episodes[i];\n            break;\n          }\n          if (episodes[i].id === currentEpisode.id) {\n            foundCurrent = true;\n            // Check if there's a next episode in the same season\n            if (i + 1 < episodes.length) {\n              nextEpisode = episodes[i + 1];\n              break;\n            }\n          }\n        }\n        if (nextEpisode) break;\n      }\n      \n      if (nextEpisode) {\n        setCurrentEpisode(nextEpisode);\n        setAutoPlay(true);\n        return;\n      }\n    }\n    \n    // Fallback to related videos\n    if (relatedVideos.length > 0) {\n      const nextVideo = relatedVideos[0];\n      window.location.href = `/watch/${nextVideo.id}`;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"watch-loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading video...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"watch-error\">\n        <h2>Video not found</h2>\n        <p>{error}</p>\n        <Link to=\"/\" className=\"btn btn-primary\">Back to Home</Link>\n      </div>\n    );\n  }\n\n  if (!video || !currentEpisode) {\n    return (\n      <div className=\"watch-error\">\n        <h2>Video not available</h2>\n        <p>Please select an episode from the series page.</p>\n        <Link to=\"/\" className=\"btn btn-primary\">Back to Home</Link>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"watch-container\">\n      <div className=\"video-section\">\n        <Player \n          video={currentEpisode} \n          onVideoEnd={handleVideoEnd} \n          autoPlay={autoPlay}\n          ref={playerRef} \n        />\n      </div>\n      \n      <div className=\"watch-content\">\n        <div className=\"video-info\">\n          <div className=\"video-header\">\n            <h1 className=\"video-title\">{currentEpisode.title}</h1>\n            <h2 className=\"series-title\">{video.title}</h2>\n            <div className=\"video-meta\">\n              <span className=\"rating\">{video.rating}</span>\n              <span className=\"year\">{video.year}</span>\n              <span className=\"duration\">{currentEpisode.duration}</span>\n              {video.episodes && video.episodes > 1 && (\n                <span className=\"episodes\">{video.episodes} Episodes</span>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"video-description\">\n            <p>{currentEpisode.description}</p>\n          </div>\n          \n          <div className=\"video-genres\">\n            {video.genre && video.genre.map(genre => (\n              <span key={genre} className=\"genre-tag\">{genre}</span>\n            ))}\n          </div>\n        </div>\n        \n        {relatedVideos.length > 0 && (\n          <div className=\"related-section\">\n            <h2>More Like This</h2>\n            <div className=\"related-grid\">\n              {relatedVideos.map(relatedVideo => (\n                <Link to={`/watch/${relatedVideo.id}`} key={relatedVideo.id} className=\"related-card\">\n                  <img src={relatedVideo.thumbnail} alt={relatedVideo.title} className=\"related-thumbnail\" />\n                  <div className=\"related-info\">\n                    <h3 className=\"related-title\">{relatedVideo.title}</h3>\n                    <div className=\"related-meta\">\n                      <span className=\"rating\">{relatedVideo.rating}</span>\n                      <span className=\"year\">{relatedVideo.year}</span>\n                    </div>\n                    <p className=\"related-description\">{relatedVideo.description}</p>\n                  </div>\n                </Link>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Watch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}